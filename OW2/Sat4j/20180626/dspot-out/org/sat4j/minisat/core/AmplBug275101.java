package org.sat4j.minisat.core;


import org.junit.Assert;
import org.junit.Test;
import org.sat4j.core.VecInt;
import org.sat4j.minisat.SolverFactory;
import org.sat4j.opt.MaxSatDecorator;
import org.sat4j.specs.ContradictionException;
import org.sat4j.specs.IConstr;
import org.sat4j.specs.ISolver;
import org.sat4j.specs.IVecInt;
import org.sat4j.specs.TimeoutException;
import org.sat4j.tools.ModelIterator;
import org.sat4j.tools.OptToSatAdapter;


public class AmplBug275101 {
    @Test(timeout = 10000)
    public void testMaxSAtIteratorIfSat() throws Exception, ContradictionException, TimeoutException {
        ISolver solver = new ModelIterator(new OptToSatAdapter(new MaxSatDecorator(SolverFactory.newDefault())));
        int o_testMaxSAtIteratorIfSat__6 = solver.newVar(3);
        Assert.assertEquals(3, ((int) (o_testMaxSAtIteratorIfSat__6)));
        IVecInt literals = new VecInt();
        IVecInt o_testMaxSAtIteratorIfSat__9 = literals.push((-1)).push((-2)).push(3);
        Assert.assertEquals("-1,-2,3", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__9).toString());
        Assert.assertEquals(0, ((int) (((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__9).hashCode())));
        Assert.assertFalse(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__9).isEmpty());
        IConstr o_testMaxSAtIteratorIfSat__14 = solver.addClause(literals);
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).isSatisfied());
        int[] array_2097260477 = new int[]{3, 5, 6, 8};
        	int[] array_1454982327 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).getLits();
        	for(int ii = 0; ii <array_2097260477.length; ii++) {
        		org.junit.Assert.assertEquals(array_2097260477[ii], array_1454982327[ii]);
        	};
        Assert.assertEquals("-1[?] -2[?] 3[?] 4[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).toString());
        Assert.assertEquals(5, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).hashCode())));
        literals.clear();
        IVecInt o_testMaxSAtIteratorIfSat__16 = literals.push((-1)).push(2);
        Assert.assertEquals("-1,2", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__16).toString());
        Assert.assertEquals(0, ((int) (((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__16).hashCode())));
        Assert.assertFalse(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__16).isEmpty());
        IConstr o_testMaxSAtIteratorIfSat__19 = solver.addClause(literals);
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).isSatisfied());
        int[] array_1135764624 = new int[]{3, 4, 10};
        	int[] array_1944614705 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).getLits();
        	for(int ii = 0; ii <array_1135764624.length; ii++) {
        		org.junit.Assert.assertEquals(array_1135764624[ii], array_1944614705[ii]);
        	};
        Assert.assertEquals("-1[?] 2[?] 5[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).toString());
        Assert.assertEquals(5, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).hashCode())));
        literals.clear();
        IVecInt o_testMaxSAtIteratorIfSat__21 = literals.push((-1)).push((-3));
        Assert.assertEquals("-1,-3", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__21).toString());
        Assert.assertEquals(-2, ((int) (((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__21).hashCode())));
        Assert.assertFalse(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__21).isEmpty());
        IConstr o_testMaxSAtIteratorIfSat__25 = solver.addClause(literals);
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).isSatisfied());
        int[] array_564448070 = new int[]{3, 7, 12};
        	int[] array_1116118474 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).getLits();
        	for(int ii = 0; ii <array_564448070.length; ii++) {
        		org.junit.Assert.assertEquals(array_564448070[ii], array_1116118474[ii]);
        	};
        Assert.assertEquals("-1[?] -3[?] 6[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).toString());
        Assert.assertEquals(7, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).hashCode())));
        literals.clear();
        boolean o_testMaxSAtIteratorIfSat__27 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__27);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__32 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__32);
        boolean o_testMaxSAtIteratorIfSat__33 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__33);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__38 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__38);
        boolean o_testMaxSAtIteratorIfSat__39 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__39);
        boolean o_testMaxSAtIteratorIfSat__40 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__40);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__45 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__45);
        boolean o_testMaxSAtIteratorIfSat__46 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__46);
        boolean o_testMaxSAtIteratorIfSat__47 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__47);
        boolean o_testMaxSAtIteratorIfSat__48 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__48);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__53 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__53);
        boolean o_testMaxSAtIteratorIfSat__54 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__54);
        boolean o_testMaxSAtIteratorIfSat__55 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__55);
        boolean o_testMaxSAtIteratorIfSat__56 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__56);
        boolean o_testMaxSAtIteratorIfSat__57 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__57);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__62 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__62);
        boolean o_testMaxSAtIteratorIfSat__63 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__63);
        boolean o_testMaxSAtIteratorIfSat__64 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__64);
        boolean o_testMaxSAtIteratorIfSat__65 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__65);
        boolean o_testMaxSAtIteratorIfSat__66 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__66);
        boolean o_testMaxSAtIteratorIfSat__67 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__67);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__72 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__72);
        boolean o_testMaxSAtIteratorIfSat__73 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__73);
        boolean o_testMaxSAtIteratorIfSat__74 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__74);
        boolean o_testMaxSAtIteratorIfSat__75 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__75);
        boolean o_testMaxSAtIteratorIfSat__76 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__76);
        boolean o_testMaxSAtIteratorIfSat__77 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__77);
        boolean o_testMaxSAtIteratorIfSat__78 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__78);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__83 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__83);
        boolean o_testMaxSAtIteratorIfSat__84 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__84);
        boolean o_testMaxSAtIteratorIfSat__85 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__85);
        boolean o_testMaxSAtIteratorIfSat__86 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__86);
        boolean o_testMaxSAtIteratorIfSat__87 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__87);
        boolean o_testMaxSAtIteratorIfSat__88 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__88);
        boolean o_testMaxSAtIteratorIfSat__89 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__89);
        boolean o_testMaxSAtIteratorIfSat__90 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__90);
        System.out.println(((("" + (solver.model(1))) + (solver.model(2))) + (solver.model(3))));
        boolean o_testMaxSAtIteratorIfSat__95 = solver.isSatisfiable();
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__95);
        Assert.assertEquals(3, ((int) (o_testMaxSAtIteratorIfSat__6)));
        Assert.assertEquals("", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__9).toString());
        Assert.assertTrue(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__9).isEmpty());
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).isSatisfied());
        int[] array_696072730 = new int[]{3, 5, 6, 8};
        	int[] array_1141906742 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).getLits();
        	for(int ii = 0; ii <array_696072730.length; ii++) {
        		org.junit.Assert.assertEquals(array_696072730[ii], array_1141906742[ii]);
        	};
        Assert.assertEquals("-1[?] -2[?] 3[?] 4[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).toString());
        Assert.assertEquals(5, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__14).hashCode())));
        Assert.assertEquals("", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__16).toString());
        Assert.assertTrue(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__16).isEmpty());
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).isSatisfied());
        int[] array_1279429236 = new int[]{3, 4, 10};
        	int[] array_1152296711 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).getLits();
        	for(int ii = 0; ii <array_1279429236.length; ii++) {
        		org.junit.Assert.assertEquals(array_1279429236[ii], array_1152296711[ii]);
        	};
        Assert.assertEquals("-1[?] 2[?] 5[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).toString());
        Assert.assertEquals(5, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__19).hashCode())));
        Assert.assertEquals("", ((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__21).toString());
        Assert.assertTrue(((org.sat4j.core.VecInt)o_testMaxSAtIteratorIfSat__21).isEmpty());
        Assert.assertEquals(0.0, ((double) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).getActivity())), 0.1);
        Assert.assertFalse(((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).isSatisfied());
        int[] array_2123796144 = new int[]{3, 7, 12};
        	int[] array_765938660 = (int[])((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).getLits();
        	for(int ii = 0; ii <array_2123796144.length; ii++) {
        		org.junit.Assert.assertEquals(array_2123796144[ii], array_765938660[ii]);
        	};
        Assert.assertEquals("-1[?] -3[?] 6[?] ", ((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).toString());
        Assert.assertEquals(7, ((int) (((org.sat4j.minisat.constraints.cnf.OriginalWLClause)o_testMaxSAtIteratorIfSat__25).hashCode())));
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__27);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__32);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__33);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__38);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__39);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__40);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__45);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__46);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__47);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__48);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__53);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__54);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__55);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__56);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__57);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__62);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__63);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__64);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__65);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__66);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__67);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__72);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__73);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__74);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__75);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__76);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__77);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__78);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__83);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__84);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__85);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__86);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__87);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__88);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__89);
        Assert.assertTrue(o_testMaxSAtIteratorIfSat__90);
    }
}

