<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="modeladapter-stamp"><sessioninfo id="avalon.atos.net-6b890ed7" start="1539003076458" dump="1539003099882"/><package name="eu/supersede/dynadapt/modeladapter/queries/util"><class name="eu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification" sourcefilename="PropertiesWithTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification$LazyHolder" sourcefilename="GetReferenceToTypeQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification$GeneratedPQuery" sourcefilename="GetManifestationsQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="131"><counter type="INSTRUCTION" missed="302" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="399" covered="0"/><counter type="LINE" missed="34" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification$GeneratedPQuery" sourcefilename="ParametersWithTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification$LazyHolder" sourcefilename="ReferencesToTypeQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification$LazyHolder" sourcefilename="InstanceOfInstanceSpecificationLinkQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeProcessor" sourcefilename="ReferencesToTypeProcessor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification$GeneratedPQuery" sourcefilename="SubClassOfQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="270" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="342" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification$LazyHolder" sourcefilename="PropertiesWithTypeQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification" sourcefilename="GetManifestationsQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="74"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification$LazyHolder" sourcefilename="ParametersWithTypeQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification$GeneratedPQuery" sourcefilename="InstanceSpecificationLinkQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="117"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="122"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="127"><counter type="INSTRUCTION" missed="175" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="222" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification" sourcefilename="ReferencesToTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsProcessor" sourcefilename="GetManifestationsProcessor.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;)V" line="31"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification$LazyHolder" sourcefilename="GetManifestationsQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/SubClassOfProcessor" sourcefilename="SubClassOfProcessor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkProcessor" sourcefilename="InstanceOfInstanceSpecificationLinkProcessor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification$LazyHolder" sourcefilename="SubClassOfQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification" sourcefilename="ParametersWithTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification" sourcefilename="GetReferenceToTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeProcessor" sourcefilename="GetReferenceToTypeProcessor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeProcessor" sourcefilename="ParametersWithTypeProcessor.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;)V" line="29"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification$GeneratedPQuery" sourcefilename="PropertiesWithTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="185" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification$GeneratedPQuery" sourcefilename="GetReferenceToTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="103"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="119"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="124"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="129"><counter type="INSTRUCTION" missed="124" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="196" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkProcessor" sourcefilename="InstanceSpecificationLinkProcessor.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;)V" line="27"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification" sourcefilename="SubClassOfQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="74"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification$GeneratedPQuery" sourcefilename="ReferencesToTypeQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="105"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="131"><counter type="INSTRUCTION" missed="336" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="408" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification" sourcefilename="InstanceSpecificationLinkQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher;" line="59"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="74"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification$LazyHolder" sourcefilename="InstanceSpecificationLinkQuerySpecification.java"><method name="ensureInitialized" desc="()Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="86"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification$GeneratedPQuery" sourcefilename="InstanceOfInstanceSpecificationLinkQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="105"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFullyQualifiedName" desc="()Ljava/lang/String;" line="116"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameterNames" desc="()Ljava/util/List;" line="121"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameters" desc="()Ljava/util/List;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doGetContainedBodies" desc="()Ljava/util/Set;" line="131"><counter type="INSTRUCTION" missed="371" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="443" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeProcessor" sourcefilename="PropertiesWithTypeProcessor.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="process" desc="(Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;)V" line="29"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification" sourcefilename="InstanceOfInstanceSpecificationLinkQuerySpecification.java"><method name="&lt;init&gt;" desc="()V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="instantiate" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher;" line="66"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="71"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ReferencesToTypeQuerySpecification.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="22" ci="0" mb="0" cb="0"/><line nr="139" mi="22" ci="0" mb="0" cb="0"/><line nr="140" mi="25" ci="0" mb="0" cb="0"/><line nr="145" mi="20" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="22" ci="0" mb="0" cb="0"/><line nr="153" mi="22" ci="0" mb="0" cb="0"/><line nr="154" mi="25" ci="0" mb="0" cb="0"/><line nr="159" mi="20" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="5" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="22" ci="0" mb="0" cb="0"/><line nr="167" mi="22" ci="0" mb="0" cb="0"/><line nr="168" mi="25" ci="0" mb="0" cb="0"/><line nr="173" mi="20" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="447" covered="0"/><counter type="LINE" missed="51" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="PropertiesWithTypeProcessor.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceSpecificationLinkQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="11" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="8" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="8" ci="0" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="0" cb="0"/><line nr="132" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="22" ci="0" mb="0" cb="0"/><line nr="135" mi="15" ci="0" mb="0" cb="0"/><line nr="139" mi="22" ci="0" mb="0" cb="0"/><line nr="140" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="26" ci="0" mb="0" cb="0"/><line nr="142" mi="22" ci="0" mb="0" cb="0"/><line nr="143" mi="7" ci="0" mb="0" cb="0"/><line nr="145" mi="22" ci="0" mb="0" cb="0"/><line nr="146" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="257" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GetManifestationsProcessor.java"><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="8" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SubClassOfProcessor.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GetReferenceToTypeQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="22" ci="0" mb="0" cb="0"/><line nr="137" mi="22" ci="0" mb="0" cb="0"/><line nr="138" mi="25" ci="0" mb="0" cb="0"/><line nr="143" mi="20" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="235" covered="0"/><counter type="LINE" missed="35" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="SubClassOfQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="22" ci="0" mb="0" cb="0"/><line nr="138" mi="22" ci="0" mb="0" cb="0"/><line nr="139" mi="25" ci="0" mb="0" cb="0"/><line nr="144" mi="22" ci="0" mb="0" cb="0"/><line nr="145" mi="4" ci="0" mb="0" cb="0"/><line nr="146" mi="26" ci="0" mb="0" cb="0"/><line nr="147" mi="22" ci="0" mb="0" cb="0"/><line nr="148" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="22" ci="0" mb="0" cb="0"/><line nr="151" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="26" ci="0" mb="0" cb="0"/><line nr="153" mi="22" ci="0" mb="0" cb="0"/><line nr="154" mi="7" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="381" covered="0"/><counter type="LINE" missed="45" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GetManifestationsQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="14" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="112" mi="21" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="16" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="22" ci="0" mb="0" cb="0"/><line nr="140" mi="22" ci="0" mb="0" cb="0"/><line nr="141" mi="22" ci="0" mb="0" cb="0"/><line nr="142" mi="35" ci="0" mb="0" cb="0"/><line nr="148" mi="22" ci="0" mb="0" cb="0"/><line nr="149" mi="4" ci="0" mb="0" cb="0"/><line nr="150" mi="26" ci="0" mb="0" cb="0"/><line nr="151" mi="22" ci="0" mb="0" cb="0"/><line nr="152" mi="7" ci="0" mb="0" cb="0"/><line nr="154" mi="22" ci="0" mb="0" cb="0"/><line nr="155" mi="4" ci="0" mb="0" cb="0"/><line nr="156" mi="26" ci="0" mb="0" cb="0"/><line nr="157" mi="22" ci="0" mb="0" cb="0"/><line nr="158" mi="7" ci="0" mb="0" cb="0"/><line nr="159" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="1" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="1" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="442" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="InstanceOfInstanceSpecificationLinkProcessor.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceOfInstanceSpecificationLinkQuerySpecification.java"><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="112" mi="16" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="138" mi="4" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="140" mi="22" ci="0" mb="0" cb="0"/><line nr="141" mi="22" ci="0" mb="0" cb="0"/><line nr="142" mi="25" ci="0" mb="0" cb="0"/><line nr="147" mi="16" ci="0" mb="0" cb="0"/><line nr="149" mi="22" ci="0" mb="0" cb="0"/><line nr="150" mi="4" ci="0" mb="0" cb="0"/><line nr="151" mi="26" ci="0" mb="0" cb="0"/><line nr="152" mi="22" ci="0" mb="0" cb="0"/><line nr="153" mi="7" ci="0" mb="0" cb="0"/><line nr="155" mi="22" ci="0" mb="0" cb="0"/><line nr="156" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="26" ci="0" mb="0" cb="0"/><line nr="158" mi="22" ci="0" mb="0" cb="0"/><line nr="159" mi="7" ci="0" mb="0" cb="0"/><line nr="161" mi="22" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="163" mi="26" ci="0" mb="0" cb="0"/><line nr="164" mi="22" ci="0" mb="0" cb="0"/><line nr="165" mi="7" ci="0" mb="0" cb="0"/><line nr="166" mi="4" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="171" mi="4" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="173" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="482" covered="0"/><counter type="LINE" missed="52" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ReferencesToTypeProcessor.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PropertiesWithTypeQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="22" ci="0" mb="0" cb="0"/><line nr="137" mi="22" ci="0" mb="0" cb="0"/><line nr="138" mi="25" ci="0" mb="0" cb="0"/><line nr="143" mi="22" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="26" ci="0" mb="0" cb="0"/><line nr="146" mi="22" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="296" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="InstanceSpecificationLinkProcessor.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParametersWithTypeProcessor.java"><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParametersWithTypeQuerySpecification.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="16" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="110" mi="16" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="12" ci="0" mb="0" cb="0"/><line nr="124" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="135" mi="4" ci="0" mb="0" cb="0"/><line nr="136" mi="22" ci="0" mb="0" cb="0"/><line nr="137" mi="22" ci="0" mb="0" cb="0"/><line nr="138" mi="25" ci="0" mb="0" cb="0"/><line nr="143" mi="22" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="0" cb="0"/><line nr="145" mi="26" ci="0" mb="0" cb="0"/><line nr="146" mi="22" ci="0" mb="0" cb="0"/><line nr="147" mi="7" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="152" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="296" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GetReferenceToTypeProcessor.java"><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="2916" covered="0"/><counter type="LINE" missed="370" covered="0"/><counter type="COMPLEXITY" missed="128" covered="0"/><counter type="METHOD" missed="128" covered="0"/><counter type="CLASS" missed="32" covered="0"/></package><package name="eu/supersede/dynadapt/modeladapter"><class name="eu/supersede/dynadapt/modeladapter/ComposableInstanceSpecification" sourcefilename="ComposableInstanceSpecification.java"><method name="&lt;init&gt;" desc="(Leu/supersede/dynadapt/model/query/IModelQuery;Ljava/util/HashMap;)V" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAddComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="67"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyDeleteComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="90"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addSlotInInstanceSpecification" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/Model;)V" line="109"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createValueSpecificationInstance" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/InstanceValue;)Lorg/eclipse/uml2/uml/InstanceSpecification;" line="144"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addInstanceSpecificationInModel" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/Model;)V" line="162"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferencingInstanceSpecificationLinks" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/Model;)Ljava/util/Set;" line="176"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteInstanceSpecificationInModel" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;)V" line="195"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="deleteSlotInInstanceBase" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="223"><counter type="INSTRUCTION" missed="66" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="destroySlotValueSpecification" desc="(Lorg/eclipse/uml2/uml/Slot;)V" line="243"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyReplaceComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="259"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="429" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="90" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableOpaqueAction" sourcefilename="ComposableOpaqueAction.java"><method name="&lt;init&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAddComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="58"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyDeleteComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="64"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyReplaceComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="70"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="27" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendElementToBaseModel" desc="(Lorg/eclipse/uml2/uml/internal/impl/ActivityImpl;Lorg/eclipse/uml2/uml/OpaqueAction;Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="116"><counter type="INSTRUCTION" missed="152" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="52"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="291" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/ModelAdapterUtilities" sourcefilename="ModelAdapterUtilities.java"><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkSameRelationship" desc="(Lorg/eclipse/uml2/uml/Relationship;Lorg/eclipse/uml2/uml/Relationship;)Z" line="93"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="modelContainsElement" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/uml2/uml/Model;)Z" line="110"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstances" desc="(Lorg/eclipse/uml2/uml/internal/impl/ClassImpl;Lorg/eclipse/uml2/uml/Model;)Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageInModel" desc="(Lorg/eclipse/uml2/uml/Package;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Package;" line="145"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPackageInPackage" desc="(Ljava/util/List;Lorg/eclipse/uml2/uml/Package;)Lorg/eclipse/uml2/uml/Package;" line="157"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addElementInPackage" desc="(Lorg/eclipse/uml2/uml/PackageableElement;Lorg/eclipse/uml2/uml/Package;)V" line="168"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElementInModel" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Element;" line="172"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElement" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/uml2/uml/NamedElement;)Lorg/eclipse/uml2/uml/Element;" line="188"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedName" desc="(Lorg/eclipse/uml2/uml/NamedElement;)Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getQualifiedName" desc="(Ljava/lang/String;Lorg/eclipse/uml2/uml/Element;)Ljava/lang/String;" line="209"><counter type="INSTRUCTION" missed="40" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseStringWithDelimiter" desc="(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="222"><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEquivalentElementInModel" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Element;" line="238"><counter type="INSTRUCTION" missed="30" covered="39"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPropertyInModel" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Model;Z)Lorg/eclipse/uml2/uml/Property;" line="278"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getExecutionEnvironmentInModel" desc="(Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/ExecutionEnvironment;" line="302"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPrimitiveTypeInModel" desc="(Lorg/eclipse/uml2/uml/PrimitiveType;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Element;" line="318"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="slotsHasSameDefiningFeature" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/Slot;)Z" line="334"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="slotsHasSameValue" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/Slot;)Z" line="338"><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="areSameElements" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/uml2/uml/NamedElement;)Z" line="354"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findElementByStereotype" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Stereotype;)Lorg/eclipse/uml2/uml/Element;" line="361"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setOutgoingEdges" desc="(Lorg/eclipse/uml2/uml/internal/impl/ActivityImpl;Ljava/util/List;Lorg/eclipse/uml2/uml/ActivityNode;)Ljava/util/List;" line="371"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setIncomingEdges" desc="(Ljava/util/List;Lorg/eclipse/uml2/uml/ActivityNode;)V" line="383"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementHasRole" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Stereotype;)Z" line="393"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementMatchesInModel" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/NamedElement;)Z" line="397"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPackageInModelMatchingElement" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/PackageableElement;)Lorg/eclipse/uml2/uml/Package;" line="401"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createElement" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/NamedElement;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Element;" line="407"><counter type="INSTRUCTION" missed="220" covered="75"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="24" covered="10"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createManifestation" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/Package;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Manifestation;" line="449"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="21" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createInstanceSpecification" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/Package;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/InstanceSpecification;" line="484"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createSlot" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/InstanceSpecification;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Slot;" line="506"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createValue" desc="(Lorg/eclipse/uml2/uml/Slot;Lorg/eclipse/uml2/uml/ValueSpecification;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)V" line="526"><counter type="INSTRUCTION" missed="74" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createPackage" desc="(Lorg/eclipse/uml2/uml/Package;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Package;" line="550"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createProperty" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Classifier;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Property;" line="569"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createOperation" desc="(Lorg/eclipse/uml2/uml/Operation;Lorg/eclipse/uml2/uml/Class;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Operation;" line="590"><counter type="INSTRUCTION" missed="9" covered="48"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createAssociation" desc="(Lorg/eclipse/uml2/uml/Association;Lorg/eclipse/uml2/uml/Classifier;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Association;" line="607"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createClass" desc="(Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/uml2/uml/Package;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Class;" line="620"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveElementInModel" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/PackageableElement;Ljava/util/HashMap;)Lorg/eclipse/uml2/uml/Element;" line="639"><counter type="INSTRUCTION" missed="9" covered="53"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvePropertyInClass" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Class;Ljava/util/HashMap;)Lorg/eclipse/uml2/uml/Property;" line="671"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyMatchAnotherInModel" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;)Z" line="683"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveOperationInClass" desc="(Lorg/eclipse/uml2/uml/Operation;Lorg/eclipse/uml2/uml/Class;Ljava/util/HashMap;)Lorg/eclipse/uml2/uml/Operation;" line="693"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operationMatchAnotherInModel" desc="(Lorg/eclipse/uml2/uml/Operation;Lorg/eclipse/uml2/uml/Operation;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;)Z" line="705"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterMatchAnotherInOperationInModel" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Operation;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;)Z" line="726"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operationReturnTypeMatchAnotherInModel" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;)Z" line="739"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterTypeMatchAnotherInModel" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;)Z" line="748"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementMatchesInList" desc="(Lorg/eclipse/uml2/uml/NamedElement;Lorg/eclipse/emf/common/util/EList;)Z" line="769"><counter type="INSTRUCTION" missed="3" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findSubclassesOfType" desc="(Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/uml2/uml/Model;)Ljava/util/Set;" line="781"><counter type="INSTRUCTION" missed="57" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementIsReferencedInModel" desc="(Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/uml2/uml/Model;)Z" line="803"><counter type="INSTRUCTION" missed="63" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAssociationsOfClass" desc="(Lorg/eclipse/uml2/uml/Class;)Ljava/util/List;" line="846"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1588" covered="439"/><counter type="BRANCH" missed="221" covered="39"/><counter type="LINE" missed="329" covered="85"/><counter type="COMPLEXITY" missed="152" covered="26"/><counter type="METHOD" missed="35" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableActivityNode" sourcefilename="ComposableActivityNode.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAddComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="53"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyDeleteComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="59"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyReplaceComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="65"><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="appendElementToBaseModel" desc="(Lorg/eclipse/uml2/uml/internal/impl/ActivityImpl;Lorg/eclipse/uml2/uml/ActivityNode;Ljava/util/List;Ljava/util/List;)Ljava/util/List;" line="118"><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="272" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableImpl" sourcefilename="ComposableImpl.java"><method name="&lt;init&gt;" desc="(Leu/supersede/dynadapt/model/query/IModelQuery;Ljava/util/HashMap;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="eu/supersede/dynadapt/modeladapter/CompositionDirective" sourcefilename="CompositionDirective.java"><method name="&lt;clinit&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableFactory" sourcefilename="ComposableFactory.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Lorg/eclipse/uml2/uml/Element;Leu/supersede/dynadapt/model/query/IModelQuery;Ljava/util/HashMap;)Leu/supersede/dynadapt/modeladapter/Composable;" line="42"><counter type="INSTRUCTION" missed="23" covered="23"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="7" covered="6"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="23"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="eu/supersede/dynadapt/modeladapter/ModelAdapter" sourcefilename="ModelAdapter.java"><method name="&lt;init&gt;" desc="(Leu/supersede/dynadapt/model/IModelManager;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyCompositionDirective" desc="(Leu/supersede/dynadapt/dsl/aspect/ActionOptionType;Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;Lorg/eclipse/uml2/uml/Stereotype;Lorg/eclipse/uml2/uml/Model;)Lorg/eclipse/uml2/uml/Model;" line="65"><counter type="INSTRUCTION" missed="45" covered="58"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyUpdateComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Slot;Ljava/lang/String;)Lorg/eclipse/uml2/uml/Model;" line="95"><counter type="INSTRUCTION" missed="89" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyUpdateCompositionDirective" desc="(Lorg/eclipse/uml2/uml/Model;Ljava/util/HashMap;Ljava/lang/String;)Lorg/eclipse/uml2/uml/Model;" line="117"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="173" covered="83"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="30" covered="18"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableClass" sourcefilename="ComposableClass.java"><method name="&lt;init&gt;" desc="(Leu/supersede/dynadapt/model/query/IModelQuery;Ljava/util/HashMap;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyAddComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addRealizations" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Element;)V" line="102"><counter type="INSTRUCTION" missed="28" covered="19"/><counter type="BRANCH" missed="7" covered="3"/><counter type="LINE" missed="7" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addGeneralizations" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Element;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addElementToModel" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/PackageableElement;)Lorg/eclipse/uml2/uml/Element;" line="154"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createGeneralizationInClass" desc="(Lorg/eclipse/uml2/uml/Generalization;Lorg/eclipse/uml2/uml/Element;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addOperations" desc="(Lorg/eclipse/uml2/uml/internal/impl/ClassImpl;Lorg/eclipse/uml2/uml/internal/impl/ClassImpl;Lorg/eclipse/uml2/uml/Model;)V" line="176"><counter type="INSTRUCTION" missed="19" covered="8"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addProperties" desc="(Lorg/eclipse/uml2/uml/internal/impl/ClassImpl;Lorg/eclipse/uml2/uml/internal/impl/ClassImpl;Lorg/eclipse/uml2/uml/Model;)V" line="186"><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyDeleteComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="233"><counter type="INSTRUCTION" missed="178" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="39" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedAndRemoveType" desc="(Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Model;)V" line="319"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="removeType" desc="(Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Model;)V" line="329"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findReferencesOfType" desc="(Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Model;)Ljava/util/List;" line="355"><counter type="INSTRUCTION" missed="130" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyReplaceComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="422"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="432" covered="169"/><counter type="BRANCH" missed="83" covered="17"/><counter type="LINE" missed="100" covered="42"/><counter type="COMPLEXITY" missed="49" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="eu/supersede/dynadapt/modeladapter/ComposableExecutionEnvironment" sourcefilename="ComposableExecutionEnvironment.java"><method name="&lt;init&gt;" desc="(Leu/supersede/dynadapt/model/query/IModelQuery;Ljava/util/HashMap;)V" line="25"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyAddComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="41"><counter type="INSTRUCTION" missed="47" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyDeleteComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="58"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyReplaceComposition" desc="(Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Model;Lorg/eclipse/uml2/uml/Element;)V" line="65"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addManifestationInModel" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/Model;)V" line="70"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManifestationForExecutionEnvironment" desc="(Lorg/eclipse/uml2/uml/ExecutionEnvironment;)Ljava/util/Set;" line="79"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="manifestationContainsElementAsClient" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;)Z" line="97"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ModelAdapter.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="13" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="2"/><line nr="76" mi="0" ci="13" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="2"/><line nr="79" mi="0" ci="7" mb="1" cb="1"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="81" mi="7" ci="0" mb="2" cb="0"/><line nr="82" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="2" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="2" cb="0"/><line nr="98" mi="6" ci="0" mb="0" cb="0"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="7" ci="0" mb="2" cb="0"/><line nr="101" mi="6" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="7" ci="0" mb="2" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="2" cb="0"/><line nr="107" mi="6" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="15" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="11" ci="0" mb="2" cb="0"/><line nr="119" mi="13" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="83"/><counter type="BRANCH" missed="18" covered="8"/><counter type="LINE" missed="30" covered="18"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposableFactory.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="5" cb="1"/><line nr="46" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="23"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposableImpl.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposableExecutionEnvironment.java"><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="2" cb="0"/><line nr="43" mi="4" ci="0" mb="2" cb="0"/><line nr="44" mi="9" ci="0" mb="0" cb="0"/><line nr="45" mi="9" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="2" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="11" ci="0" mb="2" cb="0"/><line nr="99" mi="6" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="38" covered="0"/><counter type="COMPLEXITY" missed="14" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CompositionDirective.java"><line nr="24" mi="20" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ModelAdapterUtilities.java"><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="9" ci="0" mb="2" cb="0"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="9" ci="0" mb="2" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="2" cb="0"/><line nr="114" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="6" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="1" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="5" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="4" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="6" ci="0" mb="2" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="146" mi="10" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="2" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="4" ci="0" mb="0" cb="0"/><line nr="157" mi="3" ci="0" mb="2" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="0" cb="0"/><line nr="164" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><line nr="174" mi="11" ci="0" mb="2" cb="0"/><line nr="175" mi="3" ci="0" mb="2" cb="0"/><line nr="176" mi="6" ci="0" mb="2" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="180" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="1" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="11" ci="0" mb="2" cb="0"/><line nr="191" mi="3" ci="0" mb="2" cb="0"/><line nr="192" mi="6" ci="0" mb="2" cb="0"/><line nr="193" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="5" ci="0" mb="0" cb="0"/><line nr="199" mi="1" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="209" mi="9" ci="0" mb="2" cb="0"/><line nr="210" mi="4" ci="0" mb="2" cb="0"/><line nr="211" mi="3" ci="0" mb="2" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="11" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="2" cb="0"/><line nr="216" mi="2" ci="0" mb="0" cb="0"/><line nr="218" mi="5" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="225" mi="9" ci="0" mb="2" cb="0"/><line nr="226" mi="7" ci="0" mb="0" cb="0"/><line nr="228" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="8" ci="0" mb="2" cb="0"/><line nr="230" mi="13" ci="0" mb="0" cb="0"/><line nr="231" mi="8" ci="0" mb="0" cb="0"/><line nr="232" mi="2" ci="0" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="2"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="4" ci="3" mb="3" cb="1"/><line nr="245" mi="6" ci="0" mb="0" cb="0"/><line nr="249" mi="4" ci="3" mb="3" cb="1"/><line nr="250" mi="6" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="1" cb="1"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="259" mi="0" ci="2" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="3" mb="0" cb="2"/><line nr="263" mi="0" ci="2" mb="0" cb="0"/><line nr="266" mi="0" ci="4" mb="1" cb="1"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="1" cb="1"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="2" mb="0" cb="0"/><line nr="278" mi="2" ci="0" mb="0" cb="0"/><line nr="279" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="2" ci="0" mb="2" cb="0"/><line nr="281" mi="7" ci="0" mb="0" cb="0"/><line nr="283" mi="7" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="2" cb="0"/><line nr="289" mi="11" ci="0" mb="2" cb="0"/><line nr="290" mi="7" ci="0" mb="2" cb="0"/><line nr="291" mi="7" ci="0" mb="2" cb="0"/><line nr="292" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="298" mi="2" ci="0" mb="0" cb="0"/><line nr="302" mi="2" ci="0" mb="0" cb="0"/><line nr="303" mi="7" ci="0" mb="0" cb="0"/><line nr="305" mi="2" ci="0" mb="2" cb="0"/><line nr="306" mi="11" ci="0" mb="2" cb="0"/><line nr="307" mi="9" ci="0" mb="4" cb="0"/><line nr="308" mi="3" ci="0" mb="0" cb="0"/><line nr="309" mi="1" ci="0" mb="0" cb="0"/><line nr="311" mi="1" ci="0" mb="0" cb="0"/><line nr="314" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="4" ci="0" mb="2" cb="0"/><line nr="319" mi="7" ci="0" mb="2" cb="0"/><line nr="320" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="2" ci="0" mb="0" cb="0"/><line nr="324" mi="11" ci="0" mb="2" cb="0"/><line nr="325" mi="6" ci="0" mb="2" cb="0"/><line nr="326" mi="6" ci="0" mb="0" cb="0"/><line nr="327" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="1" ci="0" mb="0" cb="0"/><line nr="330" mi="2" ci="0" mb="0" cb="0"/><line nr="334" mi="8" ci="0" mb="0" cb="0"/><line nr="338" mi="6" ci="0" mb="0" cb="0"/><line nr="339" mi="6" ci="0" mb="0" cb="0"/><line nr="340" mi="6" ci="0" mb="4" cb="0"/><line nr="341" mi="10" ci="0" mb="0" cb="0"/><line nr="342" mi="6" ci="0" mb="4" cb="0"/><line nr="343" mi="8" ci="0" mb="0" cb="0"/><line nr="344" mi="6" ci="0" mb="4" cb="0"/><line nr="345" mi="12" ci="0" mb="2" cb="0"/><line nr="346" mi="6" ci="0" mb="4" cb="0"/><line nr="347" mi="11" ci="0" mb="2" cb="0"/><line nr="349" mi="2" ci="0" mb="0" cb="0"/><line nr="354" mi="2" ci="0" mb="0" cb="0"/><line nr="355" mi="14" ci="0" mb="4" cb="0"/><line nr="356" mi="12" ci="0" mb="4" cb="0"/><line nr="357" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="0" ci="3" mb="0" cb="0"/><line nr="362" mi="0" ci="10" mb="1" cb="1"/><line nr="363" mi="0" ci="4" mb="0" cb="2"/><line nr="364" mi="0" ci="2" mb="0" cb="0"/><line nr="366" mi="0" ci="1" mb="0" cb="0"/><line nr="367" mi="2" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="8" ci="0" mb="2" cb="0"/><line nr="373" mi="13" ci="0" mb="0" cb="0"/><line nr="375" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="377" mi="5" ci="0" mb="0" cb="0"/><line nr="379" mi="2" ci="0" mb="0" cb="0"/><line nr="383" mi="8" ci="0" mb="2" cb="0"/><line nr="386" mi="5" ci="0" mb="0" cb="0"/><line nr="387" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="5" ci="0" mb="0" cb="0"/><line nr="390" mi="1" ci="0" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="397" mi="2" ci="6" mb="1" cb="1"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="407" mi="0" ci="3" mb="0" cb="2"/><line nr="408" mi="0" ci="3" mb="0" cb="0"/><line nr="409" mi="0" ci="21" mb="0" cb="0"/><line nr="410" mi="0" ci="7" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="1" cb="1"/><line nr="412" mi="3" ci="0" mb="0" cb="0"/><line nr="413" mi="21" ci="0" mb="0" cb="0"/><line nr="414" mi="7" ci="0" mb="0" cb="0"/><line nr="415" mi="0" ci="3" mb="1" cb="1"/><line nr="416" mi="3" ci="0" mb="0" cb="0"/><line nr="417" mi="21" ci="0" mb="0" cb="0"/><line nr="418" mi="7" ci="0" mb="0" cb="0"/><line nr="419" mi="0" ci="3" mb="1" cb="1"/><line nr="420" mi="0" ci="3" mb="0" cb="0"/><line nr="421" mi="0" ci="21" mb="0" cb="0"/><line nr="422" mi="0" ci="8" mb="0" cb="0"/><line nr="423" mi="3" ci="0" mb="2" cb="0"/><line nr="424" mi="3" ci="0" mb="0" cb="0"/><line nr="425" mi="21" ci="0" mb="0" cb="0"/><line nr="426" mi="8" ci="0" mb="0" cb="0"/><line nr="427" mi="3" ci="0" mb="2" cb="0"/><line nr="428" mi="3" ci="0" mb="0" cb="0"/><line nr="429" mi="22" ci="0" mb="0" cb="0"/><line nr="430" mi="8" ci="0" mb="0" cb="0"/><line nr="431" mi="3" ci="0" mb="2" cb="0"/><line nr="432" mi="3" ci="0" mb="0" cb="0"/><line nr="433" mi="21" ci="0" mb="0" cb="0"/><line nr="434" mi="8" ci="0" mb="0" cb="0"/><line nr="436" mi="3" ci="0" mb="2" cb="0"/><line nr="437" mi="3" ci="0" mb="0" cb="0"/><line nr="438" mi="22" ci="0" mb="0" cb="0"/><line nr="439" mi="8" ci="0" mb="0" cb="0"/><line nr="442" mi="14" ci="0" mb="0" cb="0"/><line nr="443" mi="2" ci="0" mb="0" cb="0"/><line nr="449" mi="3" ci="0" mb="0" cb="0"/><line nr="450" mi="4" ci="0" mb="0" cb="0"/><line nr="453" mi="11" ci="0" mb="2" cb="0"/><line nr="454" mi="5" ci="0" mb="0" cb="0"/><line nr="455" mi="2" ci="0" mb="2" cb="0"/><line nr="456" mi="5" ci="0" mb="0" cb="0"/><line nr="457" mi="2" ci="0" mb="2" cb="0"/><line nr="458" mi="7" ci="0" mb="0" cb="0"/><line nr="461" mi="5" ci="0" mb="0" cb="0"/><line nr="462" mi="1" ci="0" mb="0" cb="0"/><line nr="465" mi="11" ci="0" mb="2" cb="0"/><line nr="466" mi="5" ci="0" mb="0" cb="0"/><line nr="467" mi="2" ci="0" mb="2" cb="0"/><line nr="468" mi="5" ci="0" mb="0" cb="0"/><line nr="469" mi="2" ci="0" mb="2" cb="0"/><line nr="470" mi="7" ci="0" mb="0" cb="0"/><line nr="473" mi="5" ci="0" mb="0" cb="0"/><line nr="474" mi="4" ci="0" mb="0" cb="0"/><line nr="475" mi="1" ci="0" mb="0" cb="0"/><line nr="477" mi="5" ci="0" mb="0" cb="0"/><line nr="479" mi="2" ci="0" mb="0" cb="0"/><line nr="484" mi="3" ci="0" mb="0" cb="0"/><line nr="485" mi="4" ci="0" mb="0" cb="0"/><line nr="486" mi="4" ci="0" mb="0" cb="0"/><line nr="489" mi="11" ci="0" mb="2" cb="0"/><line nr="490" mi="5" ci="0" mb="0" cb="0"/><line nr="491" mi="5" ci="0" mb="0" cb="0"/><line nr="492" mi="1" ci="0" mb="0" cb="0"/><line nr="495" mi="11" ci="0" mb="2" cb="0"/><line nr="496" mi="6" ci="0" mb="0" cb="0"/><line nr="497" mi="1" ci="0" mb="0" cb="0"/><line nr="499" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="2" ci="0" mb="0" cb="0"/><line nr="506" mi="6" ci="0" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="509" mi="6" ci="0" mb="0" cb="0"/><line nr="511" mi="2" ci="0" mb="2" cb="0"/><line nr="512" mi="6" ci="0" mb="0" cb="0"/><line nr="513" mi="2" ci="0" mb="2" cb="0"/><line nr="514" mi="11" ci="0" mb="0" cb="0"/><line nr="518" mi="3" ci="0" mb="0" cb="0"/><line nr="519" mi="5" ci="0" mb="0" cb="0"/><line nr="521" mi="3" ci="0" mb="0" cb="0"/><line nr="522" mi="2" ci="0" mb="0" cb="0"/><line nr="526" mi="9" ci="0" mb="0" cb="0"/><line nr="527" mi="3" ci="0" mb="2" cb="0"/><line nr="528" mi="7" ci="0" mb="0" cb="0"/><line nr="530" mi="2" ci="0" mb="2" cb="0"/><line nr="531" mi="7" ci="0" mb="0" cb="0"/><line nr="532" mi="2" ci="0" mb="2" cb="0"/><line nr="533" mi="9" ci="0" mb="0" cb="0"/><line nr="536" mi="4" ci="0" mb="0" cb="0"/><line nr="537" mi="4" ci="0" mb="2" cb="0"/><line nr="538" mi="7" ci="0" mb="0" cb="0"/><line nr="539" mi="3" ci="0" mb="2" cb="0"/><line nr="540" mi="7" ci="0" mb="0" cb="0"/><line nr="541" mi="3" ci="0" mb="2" cb="0"/><line nr="542" mi="6" ci="0" mb="0" cb="0"/><line nr="546" mi="1" ci="0" mb="0" cb="0"/><line nr="550" mi="3" ci="0" mb="0" cb="0"/><line nr="551" mi="4" ci="0" mb="0" cb="0"/><line nr="552" mi="6" ci="0" mb="0" cb="0"/><line nr="553" mi="2" ci="0" mb="2" cb="0"/><line nr="554" mi="4" ci="0" mb="0" cb="0"/><line nr="556" mi="8" ci="0" mb="0" cb="0"/><line nr="558" mi="2" ci="0" mb="0" cb="0"/><line nr="569" mi="0" ci="8" mb="0" cb="0"/><line nr="572" mi="0" ci="3" mb="0" cb="0"/><line nr="573" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="0" ci="2" mb="0" cb="2"/><line nr="575" mi="0" ci="3" mb="0" cb="0"/><line nr="576" mi="0" ci="6" mb="0" cb="0"/><line nr="577" mi="0" ci="1" mb="0" cb="0"/><line nr="579" mi="0" ci="6" mb="0" cb="0"/><line nr="580" mi="0" ci="10" mb="0" cb="0"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="590" mi="0" ci="4" mb="0" cb="0"/><line nr="591" mi="0" ci="4" mb="0" cb="0"/><line nr="592" mi="0" ci="11" mb="0" cb="2"/><line nr="593" mi="0" ci="5" mb="0" cb="0"/><line nr="596" mi="0" ci="10" mb="0" cb="0"/><line nr="597" mi="0" ci="1" mb="0" cb="0"/><line nr="598" mi="0" ci="2" mb="0" cb="0"/><line nr="599" mi="0" ci="3" mb="1" cb="1"/><line nr="600" mi="9" ci="0" mb="0" cb="0"/><line nr="602" mi="0" ci="8" mb="0" cb="0"/><line nr="607" mi="0" ci="10" mb="0" cb="0"/><line nr="608" mi="0" ci="12" mb="0" cb="0"/><line nr="609" mi="0" ci="12" mb="0" cb="0"/><line nr="610" mi="0" ci="10" mb="0" cb="0"/><line nr="611" mi="0" ci="12" mb="0" cb="0"/><line nr="612" mi="0" ci="12" mb="0" cb="0"/><line nr="613" mi="0" ci="5" mb="0" cb="0"/><line nr="615" mi="0" ci="2" mb="0" cb="0"/><line nr="620" mi="0" ci="7" mb="0" cb="0"/><line nr="623" mi="0" ci="11" mb="0" cb="2"/><line nr="624" mi="0" ci="6" mb="0" cb="0"/><line nr="625" mi="0" ci="1" mb="0" cb="0"/><line nr="627" mi="0" ci="11" mb="0" cb="2"/><line nr="628" mi="0" ci="6" mb="0" cb="0"/><line nr="629" mi="0" ci="1" mb="0" cb="0"/><line nr="631" mi="0" ci="2" mb="0" cb="0"/><line nr="639" mi="0" ci="6" mb="0" cb="0"/><line nr="640" mi="0" ci="2" mb="0" cb="2"/><line nr="646" mi="0" ci="11" mb="0" cb="2"/><line nr="647" mi="0" ci="4" mb="0" cb="2"/><line nr="649" mi="0" ci="8" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="652" mi="0" ci="1" mb="0" cb="0"/><line nr="654" mi="0" ci="2" mb="0" cb="2"/><line nr="657" mi="0" ci="7" mb="0" cb="0"/><line nr="658" mi="0" ci="2" mb="1" cb="1"/><line nr="659" mi="9" ci="0" mb="0" cb="0"/><line nr="663" mi="0" ci="7" mb="0" cb="0"/><line nr="666" mi="0" ci="2" mb="0" cb="0"/><line nr="671" mi="2" ci="0" mb="0" cb="0"/><line nr="672" mi="11" ci="0" mb="2" cb="0"/><line nr="673" mi="7" ci="0" mb="2" cb="0"/><line nr="674" mi="2" ci="0" mb="0" cb="0"/><line nr="675" mi="1" ci="0" mb="0" cb="0"/><line nr="677" mi="1" ci="0" mb="0" cb="0"/><line nr="678" mi="2" ci="0" mb="0" cb="0"/><line nr="683" mi="2" ci="0" mb="0" cb="0"/><line nr="684" mi="7" ci="0" mb="2" cb="0"/><line nr="685" mi="7" ci="0" mb="2" cb="0"/><line nr="686" mi="2" ci="0" mb="0" cb="0"/><line nr="688" mi="2" ci="0" mb="0" cb="0"/><line nr="693" mi="2" ci="0" mb="0" cb="0"/><line nr="694" mi="11" ci="0" mb="2" cb="0"/><line nr="695" mi="7" ci="0" mb="2" cb="0"/><line nr="696" mi="2" ci="0" mb="0" cb="0"/><line nr="697" mi="1" ci="0" mb="0" cb="0"/><line nr="699" mi="1" ci="0" mb="0" cb="0"/><line nr="700" mi="2" ci="0" mb="0" cb="0"/><line nr="705" mi="2" ci="0" mb="0" cb="0"/><line nr="707" mi="6" ci="0" mb="2" cb="0"/><line nr="709" mi="8" ci="0" mb="2" cb="0"/><line nr="711" mi="2" ci="0" mb="0" cb="0"/><line nr="713" mi="11" ci="0" mb="2" cb="0"/><line nr="714" mi="6" ci="0" mb="2" cb="0"/><line nr="715" mi="2" ci="0" mb="0" cb="0"/><line nr="716" mi="1" ci="0" mb="0" cb="0"/><line nr="718" mi="1" ci="0" mb="0" cb="0"/><line nr="721" mi="2" ci="0" mb="0" cb="0"/><line nr="726" mi="2" ci="0" mb="0" cb="0"/><line nr="727" mi="11" ci="0" mb="2" cb="0"/><line nr="728" mi="9" ci="0" mb="2" cb="0"/><line nr="729" mi="5" ci="0" mb="2" cb="0"/><line nr="730" mi="2" ci="0" mb="0" cb="0"/><line nr="731" mi="1" ci="0" mb="0" cb="0"/><line nr="733" mi="1" ci="0" mb="0" cb="0"/><line nr="734" mi="2" ci="0" mb="0" cb="0"/><line nr="739" mi="4" ci="0" mb="4" cb="0"/><line nr="740" mi="2" ci="0" mb="0" cb="0"/><line nr="742" mi="6" ci="0" mb="0" cb="0"/><line nr="748" mi="2" ci="0" mb="0" cb="0"/><line nr="751" mi="4" ci="0" mb="4" cb="0"/><line nr="752" mi="12" ci="0" mb="2" cb="0"/><line nr="756" mi="2" ci="0" mb="0" cb="0"/><line nr="769" mi="0" ci="2" mb="0" cb="0"/><line nr="770" mi="0" ci="10" mb="0" cb="2"/><line nr="771" mi="0" ci="6" mb="1" cb="1"/><line nr="772" mi="2" ci="0" mb="0" cb="0"/><line nr="773" mi="1" ci="0" mb="0" cb="0"/><line nr="775" mi="0" ci="1" mb="0" cb="0"/><line nr="776" mi="0" ci="2" mb="0" cb="0"/><line nr="781" mi="4" ci="0" mb="0" cb="0"/><line nr="783" mi="5" ci="0" mb="0" cb="0"/><line nr="784" mi="7" ci="0" mb="0" cb="0"/><line nr="785" mi="7" ci="0" mb="0" cb="0"/><line nr="786" mi="1" ci="0" mb="0" cb="0"/><line nr="787" mi="4" ci="0" mb="0" cb="0"/><line nr="788" mi="4" ci="0" mb="0" cb="0"/><line nr="790" mi="10" ci="0" mb="2" cb="0"/><line nr="791" mi="4" ci="0" mb="2" cb="0"/><line nr="792" mi="4" ci="0" mb="0" cb="0"/><line nr="794" mi="1" ci="0" mb="0" cb="0"/><line nr="795" mi="1" ci="0" mb="0" cb="0"/><line nr="796" mi="2" ci="0" mb="0" cb="0"/><line nr="797" mi="1" ci="0" mb="0" cb="0"/><line nr="798" mi="2" ci="0" mb="0" cb="0"/><line nr="803" mi="4" ci="0" mb="0" cb="0"/><line nr="805" mi="5" ci="0" mb="0" cb="0"/><line nr="806" mi="7" ci="0" mb="0" cb="0"/><line nr="807" mi="7" ci="0" mb="0" cb="0"/><line nr="808" mi="1" ci="0" mb="0" cb="0"/><line nr="809" mi="4" ci="0" mb="0" cb="0"/><line nr="810" mi="4" ci="0" mb="0" cb="0"/><line nr="812" mi="10" ci="0" mb="2" cb="0"/><line nr="813" mi="5" ci="0" mb="2" cb="0"/><line nr="814" mi="4" ci="0" mb="0" cb="0"/><line nr="816" mi="1" ci="0" mb="0" cb="0"/><line nr="817" mi="1" ci="0" mb="0" cb="0"/><line nr="818" mi="2" ci="0" mb="0" cb="0"/><line nr="819" mi="1" ci="0" mb="0" cb="0"/><line nr="820" mi="7" ci="0" mb="2" cb="0"/><line nr="846" mi="4" ci="0" mb="0" cb="0"/><line nr="847" mi="11" ci="0" mb="2" cb="0"/><line nr="848" mi="3" ci="0" mb="2" cb="0"/><line nr="849" mi="5" ci="0" mb="0" cb="0"/><line nr="851" mi="1" ci="0" mb="0" cb="0"/><line nr="852" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1588" covered="439"/><counter type="BRANCH" missed="221" covered="39"/><counter type="LINE" missed="329" covered="85"/><counter type="COMPLEXITY" missed="152" covered="26"/><counter type="METHOD" missed="35" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ComposableActivityNode.java"><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="11" ci="0" mb="2" cb="0"/><line nr="72" mi="13" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="2" cb="0"/><line nr="75" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="10" ci="0" mb="2" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="1" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="5" ci="0" mb="2" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="126" mi="7" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="129" mi="11" ci="0" mb="2" cb="0"/><line nr="130" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="5" ci="0" mb="2" cb="0"/><line nr="132" mi="9" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="2" cb="0"/><line nr="135" mi="8" ci="0" mb="0" cb="0"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="138" mi="3" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="9" ci="0" mb="2" cb="0"/><line nr="143" mi="6" ci="0" mb="0" cb="0"/><line nr="144" mi="4" ci="0" mb="2" cb="0"/><line nr="145" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="272" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ComposableInstanceSpecification.java"><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="11" ci="0" mb="2" cb="0"/><line nr="71" mi="17" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="13" ci="0" mb="2" cb="0"/><line nr="80" mi="4" ci="0" mb="2" cb="0"/><line nr="81" mi="11" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><line nr="85" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="11" ci="0" mb="2" cb="0"/><line nr="95" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="13" ci="0" mb="2" cb="0"/><line nr="102" mi="11" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="8" ci="0" mb="0" cb="0"/><line nr="141" mi="1" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="6" ci="0" mb="4" cb="0"/><line nr="151" mi="16" ci="0" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="2" cb="0"/><line nr="167" mi="8" ci="0" mb="0" cb="0"/><line nr="168" mi="11" ci="0" mb="2" cb="0"/><line nr="169" mi="5" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="176" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="2" ci="0" mb="0" cb="0"/><line nr="179" mi="4" ci="0" mb="0" cb="0"/><line nr="180" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="10" ci="0" mb="2" cb="0"/><line nr="183" mi="4" ci="0" mb="2" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="0" mb="0" cb="0"/><line nr="187" mi="1" ci="0" mb="0" cb="0"/><line nr="188" mi="2" ci="0" mb="0" cb="0"/><line nr="189" mi="1" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="199" mi="11" ci="0" mb="2" cb="0"/><line nr="200" mi="6" ci="0" mb="0" cb="0"/><line nr="201" mi="2" ci="0" mb="2" cb="0"/><line nr="202" mi="3" ci="0" mb="2" cb="0"/><line nr="203" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="9" ci="0" mb="4" cb="0"/><line nr="209" mi="13" ci="0" mb="0" cb="0"/><line nr="210" mi="4" ci="0" mb="0" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="215" mi="1" ci="0" mb="0" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="219" mi="1" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="11" ci="0" mb="2" cb="0"/><line nr="225" mi="3" ci="0" mb="2" cb="0"/><line nr="226" mi="1" ci="0" mb="0" cb="0"/><line nr="230" mi="6" ci="0" mb="2" cb="0"/><line nr="231" mi="2" ci="0" mb="2" cb="0"/><line nr="232" mi="17" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="4" ci="0" mb="0" cb="0"/><line nr="236" mi="1" ci="0" mb="0" cb="0"/><line nr="237" mi="10" ci="0" mb="2" cb="0"/><line nr="238" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="1" ci="0" mb="0" cb="0"/><line nr="240" mi="1" ci="0" mb="0" cb="0"/><line nr="243" mi="6" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="2" cb="0"/><line nr="245" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="3" ci="0" mb="0" cb="0"/><line nr="247" mi="2" ci="0" mb="2" cb="0"/><line nr="248" mi="17" ci="0" mb="0" cb="0"/><line nr="249" mi="2" ci="0" mb="0" cb="0"/><line nr="252" mi="1" ci="0" mb="0" cb="0"/><line nr="259" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="429" covered="0"/><counter type="BRANCH" missed="48" covered="0"/><counter type="LINE" missed="90" covered="0"/><counter type="COMPLEXITY" missed="36" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ComposableOpaqueAction.java"><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="2" cb="0"/><line nr="79" mi="11" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="2" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="1" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="10" ci="0" mb="2" cb="0"/><line nr="91" mi="7" ci="0" mb="0" cb="0"/><line nr="92" mi="11" ci="0" mb="2" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="95" mi="1" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="116" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="2" cb="0"/><line nr="121" mi="6" ci="0" mb="0" cb="0"/><line nr="122" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="11" ci="0" mb="2" cb="0"/><line nr="130" mi="11" ci="0" mb="0" cb="0"/><line nr="131" mi="4" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="2" cb="0"/><line nr="133" mi="9" ci="0" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="2" cb="0"/><line nr="136" mi="8" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="9" ci="0" mb="2" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="4" ci="0" mb="2" cb="0"/><line nr="144" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="4" ci="0" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="0" cb="0"/><line nr="149" mi="7" ci="0" mb="0" cb="0"/><line nr="150" mi="11" ci="0" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="291" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ComposableClass.java"><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="11" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="1" cb="1"/><line nr="106" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="11" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><line nr="112" mi="5" ci="0" mb="2" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="2"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="2"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="1" cb="1"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="146" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="4" ci="7" mb="1" cb="1"/><line nr="177" mi="5" ci="0" mb="2" cb="0"/><line nr="178" mi="1" ci="0" mb="0" cb="0"/><line nr="179" mi="8" ci="0" mb="0" cb="0"/><line nr="180" mi="1" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="2"/><line nr="187" mi="0" ci="5" mb="1" cb="1"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="0" ci="8" mb="0" cb="0"/><line nr="190" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="1" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="3" ci="0" mb="0" cb="0"/><line nr="246" mi="11" ci="0" mb="2" cb="0"/><line nr="247" mi="6" ci="0" mb="0" cb="0"/><line nr="248" mi="2" ci="0" mb="0" cb="0"/><line nr="249" mi="3" ci="0" mb="0" cb="0"/><line nr="250" mi="2" ci="0" mb="2" cb="0"/><line nr="251" mi="5" ci="0" mb="2" cb="0"/><line nr="252" mi="5" ci="0" mb="2" cb="0"/><line nr="253" mi="8" ci="0" mb="0" cb="0"/><line nr="258" mi="2" ci="0" mb="0" cb="0"/><line nr="259" mi="2" ci="0" mb="2" cb="0"/><line nr="260" mi="6" ci="0" mb="0" cb="0"/><line nr="262" mi="2" ci="0" mb="2" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="1" ci="0" mb="0" cb="0"/><line nr="277" mi="11" ci="0" mb="2" cb="0"/><line nr="278" mi="6" ci="0" mb="0" cb="0"/><line nr="280" mi="4" ci="0" mb="0" cb="0"/><line nr="282" mi="11" ci="0" mb="2" cb="0"/><line nr="283" mi="3" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="1" ci="0" mb="0" cb="0"/><line nr="286" mi="3" ci="0" mb="2" cb="0"/><line nr="287" mi="4" ci="0" mb="0" cb="0"/><line nr="288" mi="4" ci="0" mb="0" cb="0"/><line nr="291" mi="2" ci="0" mb="0" cb="0"/><line nr="292" mi="10" ci="0" mb="2" cb="0"/><line nr="293" mi="6" ci="0" mb="0" cb="0"/><line nr="294" mi="1" ci="0" mb="0" cb="0"/><line nr="295" mi="1" ci="0" mb="0" cb="0"/><line nr="303" mi="11" ci="0" mb="2" cb="0"/><line nr="304" mi="3" ci="0" mb="0" cb="0"/><line nr="305" mi="7" ci="0" mb="0" cb="0"/><line nr="306" mi="1" ci="0" mb="0" cb="0"/><line nr="312" mi="13" ci="0" mb="2" cb="0"/><line nr="313" mi="7" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="316" mi="1" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="2" cb="0"/><line nr="320" mi="7" ci="0" mb="0" cb="0"/><line nr="321" mi="5" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="329" mi="4" ci="0" mb="0" cb="0"/><line nr="330" mi="7" ci="0" mb="4" cb="0"/><line nr="331" mi="5" ci="0" mb="2" cb="0"/><line nr="333" mi="7" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="339" mi="10" ci="0" mb="2" cb="0"/><line nr="340" mi="2" ci="0" mb="0" cb="0"/><line nr="341" mi="1" ci="0" mb="0" cb="0"/><line nr="344" mi="10" ci="0" mb="2" cb="0"/><line nr="345" mi="3" ci="0" mb="2" cb="0"/><line nr="346" mi="5" ci="0" mb="0" cb="0"/><line nr="348" mi="1" ci="0" mb="0" cb="0"/><line nr="351" mi="1" ci="0" mb="0" cb="0"/><line nr="355" mi="4" ci="0" mb="0" cb="0"/><line nr="361" mi="11" ci="0" mb="2" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="364" mi="3" ci="0" mb="2" cb="0"/><line nr="365" mi="5" ci="0" mb="2" cb="0"/><line nr="366" mi="5" ci="0" mb="2" cb="0"/><line nr="367" mi="8" ci="0" mb="0" cb="0"/><line nr="371" mi="4" ci="0" mb="2" cb="0"/><line nr="372" mi="2" ci="0" mb="2" cb="0"/><line nr="373" mi="4" ci="0" mb="0" cb="0"/><line nr="375" mi="1" ci="0" mb="0" cb="0"/><line nr="382" mi="11" ci="0" mb="2" cb="0"/><line nr="383" mi="11" ci="0" mb="2" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="385" mi="4" ci="0" mb="2" cb="0"/><line nr="386" mi="2" ci="0" mb="2" cb="0"/><line nr="387" mi="4" ci="0" mb="0" cb="0"/><line nr="389" mi="1" ci="0" mb="0" cb="0"/><line nr="391" mi="3" ci="0" mb="2" cb="0"/><line nr="392" mi="4" ci="0" mb="0" cb="0"/><line nr="393" mi="4" ci="0" mb="2" cb="0"/><line nr="394" mi="2" ci="0" mb="2" cb="0"/><line nr="395" mi="4" ci="0" mb="0" cb="0"/><line nr="398" mi="1" ci="0" mb="0" cb="0"/><line nr="406" mi="11" ci="0" mb="2" cb="0"/><line nr="407" mi="3" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="2" cb="0"/><line nr="409" mi="2" ci="0" mb="2" cb="0"/><line nr="410" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="1" ci="0" mb="0" cb="0"/><line nr="414" mi="2" ci="0" mb="0" cb="0"/><line nr="422" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="432" covered="169"/><counter type="BRANCH" missed="83" covered="17"/><counter type="LINE" missed="100" covered="42"/><counter type="COMPLEXITY" missed="49" covered="14"/><counter type="METHOD" missed="5" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="3394" covered="723"/><counter type="BRANCH" missed="433" covered="65"/><counter type="LINE" missed="709" covered="155"/><counter type="COMPLEXITY" missed="304" covered="48"/><counter type="METHOD" missed="75" covered="26"/><counter type="CLASS" missed="5" covered="5"/></package><package name="eu/supersede/dynadapt/modeladapter/queries"><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch$Mutable" sourcefilename="InstanceOfInstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="196"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher" sourcefilename="ParametersWithTypeMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher;" line="60"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Ljava/util/Collection;" line="103"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="115"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Z" line="127"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)I" line="138"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="149"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="162"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfparameter" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="184"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfparameter" desc="()Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfparameter" desc="(Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;)Ljava/util/Set;" line="204"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfparameter" desc="(Lorg/eclipse/uml2/uml/Type;)Ljava/util/Set;" line="213"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOftype" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="225"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="()Ljava/util/Set;" line="236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;)Ljava/util/Set;" line="245"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Lorg/eclipse/uml2/uml/Parameter;)Ljava/util/Set;" line="254"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="263"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="273"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="283"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="296"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/Model_adapter" sourcefilename="Model_adapter.java"><method name="instance" desc="()Leu/supersede/dynadapt/modeladapter/queries/Model_adapter;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="65"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstanceSpecificationLink" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification;" line="77"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstanceSpecificationLink" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher;" line="81"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstanceOfInstanceSpecificationLink" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification;" line="85"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstanceOfInstanceSpecificationLink" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher;" line="89"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubClassOf" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification;" line="93"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubClassOf" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher;" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesWithType" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification;" line="101"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getPropertiesWithType" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher;" line="105"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParametersWithType" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification;" line="109"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParametersWithType" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatcher;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferencesToType" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification;" line="117"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getReferencesToType" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetReferenceToType" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification;" line="125"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetReferenceToType" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher;" line="129"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetManifestations" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification;" line="133"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGetManifestations" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher;" line="137"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch$Immutable" sourcefilename="InstanceOfInstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher" sourcefilename="GetManifestationsMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatcher;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Collection;" line="103"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="116"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Z" line="129"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)I" line="141"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="153"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="167"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="181"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfmanifestation" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="190"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfmanifestation" desc="()Ljava/util/Set;" line="201"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfmanifestation" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;)Ljava/util/Set;" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfmanifestation" desc="(Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Set;" line="219"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfclient" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="232"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfclient" desc="()Ljava/util/Set;" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfclient" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;)Ljava/util/Set;" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfclient" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Set;" line="261"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfsupplier" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="274"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsupplier" desc="()Ljava/util/Set;" line="285"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsupplier" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;)Ljava/util/Set;" line="294"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsupplier" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;)Ljava/util/Set;" line="303"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="313"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="323"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="333"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="346"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="315" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch$Mutable" sourcefilename="ParametersWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)V" line="192"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="197"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch" sourcefilename="GetManifestationsMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="39"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getManifestation" desc="()Lorg/eclipse/uml2/uml/Manifestation;" line="54"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClient" desc="()Lorg/eclipse/uml2/uml/ExecutionEnvironment;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSupplier" desc="()Lorg/eclipse/uml2/uml/InstanceSpecification;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="67"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setManifestation" desc="(Lorg/eclipse/uml2/uml/Manifestation;)V" line="84"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setClient" desc="(Lorg/eclipse/uml2/uml/ExecutionEnvironment;)V" line="89"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSupplier" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="94"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="110"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="115"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="132"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="142"><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetManifestationsQuerySpecification;" line="169"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="184"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="198"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch;" line="212"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="379" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="73" covered="0"/><counter type="COMPLEXITY" missed="49" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch" sourcefilename="SubClassOfMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSubclass" desc="()Lorg/eclipse/uml2/uml/Classifier;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSuperclass" desc="()Lorg/eclipse/uml2/uml/Class;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSubclass" desc="(Lorg/eclipse/uml2/uml/Classifier;)V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setSuperclass" desc="(Lorg/eclipse/uml2/uml/Class;)V" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="111"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="120"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/SubClassOfQuerySpecification;" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch$Immutable" sourcefilename="InstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="178"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="183"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch" sourcefilename="InstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="33"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLink" desc="()Lorg/eclipse/uml2/uml/InstanceSpecification;" line="44"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="49"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLink" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="58"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="69"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="92"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="100"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="BRANCH" missed="16" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceSpecificationLinkQuerySpecification;" line="123"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="162"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="195" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="31" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch$Mutable" sourcefilename="InstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="167"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="172"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch$Mutable" sourcefilename="SubClassOfMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)V" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="196"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher" sourcefilename="GetReferenceToTypeMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher;" line="59"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatcher;" line="73"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Ljava/util/Collection;" line="102"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="114"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Z" line="126"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)I" line="137"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="148"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="161"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfelement" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="183"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="()Ljava/util/Set;" line="194"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;)Ljava/util/Set;" line="203"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="(Lorg/eclipse/uml2/uml/Class;)Ljava/util/Set;" line="212"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOftype" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="224"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="()Ljava/util/Set;" line="235"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;)Ljava/util/Set;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Lorg/eclipse/uml2/uml/Element;)Ljava/util/Set;" line="253"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="262"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="272"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="282"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="295"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="80"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch$Immutable" sourcefilename="GetReferenceToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch" sourcefilename="ReferencesToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/eclipse/uml2/uml/Element;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lorg/eclipse/uml2/uml/Class;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setElement" desc="(Lorg/eclipse/uml2/uml/Element;)V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lorg/eclipse/uml2/uml/Class;)V" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="111"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="120"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ReferencesToTypeQuerySpecification;" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch$Mutable" sourcefilename="GetManifestationsMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="217"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="222"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch$Immutable" sourcefilename="ParametersWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)V" line="203"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher" sourcefilename="SubClassOfMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher;" line="60"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatcher;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Ljava/util/Collection;" line="103"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="115"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Z" line="127"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)I" line="138"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="149"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="162"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfsubclass" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="184"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsubclass" desc="()Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsubclass" desc="(Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;)Ljava/util/Set;" line="204"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsubclass" desc="(Lorg/eclipse/uml2/uml/Class;)Ljava/util/Set;" line="213"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfsuperclass" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="225"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsuperclass" desc="()Ljava/util/Set;" line="236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsuperclass" desc="(Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;)Ljava/util/Set;" line="245"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfsuperclass" desc="(Lorg/eclipse/uml2/uml/Classifier;)Ljava/util/Set;" line="254"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="263"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="273"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch;" line="283"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="296"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher" sourcefilename="InstanceSpecificationLinkMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher;" line="55"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatcher;" line="69"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Collection;" line="95"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="106"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Z" line="117"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)I" line="127"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="137"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="149"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="161"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOflink" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="170"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOflink" desc="()Ljava/util/Set;" line="181"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="187"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="197"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceSpecificationLinkMatch;" line="207"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="220"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch$Immutable" sourcefilename="PropertiesWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)V" line="203"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="208"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher" sourcefilename="InstanceOfInstanceSpecificationLinkMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher;" line="57"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatcher;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Collection;" line="100"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="112"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Z" line="124"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)I" line="135"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="146"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="159"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="172"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOflink" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="181"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOflink" desc="()Ljava/util/Set;" line="192"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOflink" desc="(Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;)Ljava/util/Set;" line="201"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOflink" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Set;" line="210"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfinstance" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="222"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfinstance" desc="()Ljava/util/Set;" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfinstance" desc="(Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;)Ljava/util/Set;" line="242"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfinstance" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)Ljava/util/Set;" line="251"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="260"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="270"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="280"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="293"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher" sourcefilename="ReferencesToTypeMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher;" line="58"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatcher;" line="72"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Ljava/util/Collection;" line="101"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="113"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Z" line="125"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)I" line="136"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="147"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="160"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="173"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfelement" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="182"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="()Ljava/util/Set;" line="193"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="(Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;)Ljava/util/Set;" line="202"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfelement" desc="(Lorg/eclipse/uml2/uml/Class;)Ljava/util/Set;" line="211"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOftype" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="223"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="()Ljava/util/Set;" line="234"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;)Ljava/util/Set;" line="243"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Lorg/eclipse/uml2/uml/Element;)Ljava/util/Set;" line="252"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="261"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="271"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch;" line="281"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="294"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="79"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch$Mutable" sourcefilename="GetReferenceToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="196"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch" sourcefilename="PropertiesWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)V" line="36"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="()Lorg/eclipse/uml2/uml/Property;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lorg/eclipse/uml2/uml/Type;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Lorg/eclipse/uml2/uml/Property;)V" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lorg/eclipse/uml2/uml/Type;)V" line="76"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="97"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="112"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/PropertiesWithTypeQuerySpecification;" line="146"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="174"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="187"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch$Mutable" sourcefilename="ReferencesToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="191"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="196"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch$Mutable" sourcefilename="PropertiesWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)V" line="192"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="197"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch" sourcefilename="GetReferenceToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getElement" desc="()Lorg/eclipse/uml2/uml/Element;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lorg/eclipse/uml2/uml/Class;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setElement" desc="(Lorg/eclipse/uml2/uml/Element;)V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lorg/eclipse/uml2/uml/Class;)V" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="111"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="120"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/GetReferenceToTypeQuerySpecification;" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)Leu/supersede/dynadapt/modeladapter/queries/GetReferenceToTypeMatch;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ReferencesToTypeMatch$Immutable" sourcefilename="ReferencesToTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Element;Lorg/eclipse/uml2/uml/Class;)V" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/SubClassOfMatch$Immutable" sourcefilename="SubClassOfMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Classifier;Lorg/eclipse/uml2/uml/Class;)V" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="207"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/GetManifestationsMatch$Immutable" sourcefilename="GetManifestationsMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Manifestation;Lorg/eclipse/uml2/uml/ExecutionEnvironment;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="228"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isMutable" desc="()Z" line="233"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch" sourcefilename="ParametersWithTypeMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)V" line="36"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParameter" desc="()Lorg/eclipse/uml2/uml/Parameter;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getType" desc="()Lorg/eclipse/uml2/uml/Type;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParameter" desc="(Lorg/eclipse/uml2/uml/Parameter;)V" line="71"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setType" desc="(Lorg/eclipse/uml2/uml/Type;)V" line="76"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="87"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="97"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="102"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="112"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/ParametersWithTypeQuerySpecification;" line="146"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="161"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="174"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Parameter;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/ParametersWithTypeMatch;" line="187"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch" sourcefilename="InstanceOfInstanceSpecificationLinkMatch.java"><method name="&lt;init&gt;" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getLink" desc="()Lorg/eclipse/uml2/uml/InstanceSpecification;" line="48"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInstance" desc="()Lorg/eclipse/uml2/uml/InstanceSpecification;" line="52"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="set" desc="(Ljava/lang/String;Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setLink" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="70"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setInstance" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;)V" line="75"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="patternName" desc="()Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parameterNames" desc="()Ljava/util/List;" line="86"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toArray" desc="()[Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toImmutable" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="96"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prettyPrint" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="111"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="120"><counter type="INSTRUCTION" missed="71" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="17" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="specification" desc="()Leu/supersede/dynadapt/modeladapter/queries/util/InstanceOfInstanceSpecificationLinkQuerySpecification;" line="145"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newEmptyMatch" desc="()Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="160"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMutableMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="173"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/InstanceSpecification;Lorg/eclipse/uml2/uml/InstanceSpecification;)Leu/supersede/dynadapt/modeladapter/queries/InstanceOfInstanceSpecificationLinkMatch;" line="186"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="287" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="60" covered="0"/><counter type="COMPLEXITY" missed="40" covered="0"/><counter type="METHOD" missed="19" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="eu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher" sourcefilename="PropertiesWithTypeMatcher.java"><method name="on" desc="(Lorg/eclipse/viatra/query/runtime/api/ViatraQueryEngine;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher;" line="60"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="()Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatcher;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="()V" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllMatches" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Ljava/util/Collection;" line="103"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="115"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Z" line="127"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countMatches" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)I" line="138"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEachMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)V" line="149"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forOneArbitraryMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;Lorg/eclipse/viatra/query/runtime/api/IMatchProcessor;)Z" line="162"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newMatch" desc="(Lorg/eclipse/uml2/uml/Property;Lorg/eclipse/uml2/uml/Type;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="175"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOfproperty" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="184"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfproperty" desc="()Ljava/util/Set;" line="195"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfproperty" desc="(Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;)Ljava/util/Set;" line="204"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOfproperty" desc="(Lorg/eclipse/uml2/uml/Type;)Ljava/util/Set;" line="213"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rawAccumulateAllValuesOftype" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="225"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="()Ljava/util/Set;" line="236"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;)Ljava/util/Set;" line="245"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAllValuesOftype" desc="(Lorg/eclipse/uml2/uml/Property;)Ljava/util/Set;" line="254"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tupleToMatch" desc="(Lorg/eclipse/viatra/query/runtime/matchers/tuple/Tuple;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="263"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatch" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="273"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="arrayToMatchMutable" desc="([Ljava/lang/Object;)Leu/supersede/dynadapt/modeladapter/queries/PropertiesWithTypeMatch;" line="283"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="querySpecification" desc="()Lorg/eclipse/viatra/query/runtime/api/IQuerySpecification;" line="296"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="81"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="ReferencesToTypeMatch.java"><line nr="33" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="4" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="8" ci="0" mb="4" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="PropertiesWithTypeMatch.java"><line nr="34" mi="13" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="7" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="13" ci="0" mb="0" cb="0"/><line nr="97" mi="11" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="15" ci="0" mb="0" cb="0"/><line nr="105" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="13" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="4" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="4" cb="0"/><line nr="139" mi="8" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ReferencesToTypeMatcher.java"><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="101" mi="13" ci="0" mb="0" cb="0"/><line nr="113" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="13" ci="0" mb="0" cb="0"/><line nr="136" mi="13" ci="0" mb="0" cb="0"/><line nr="147" mi="13" ci="0" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="160" mi="14" ci="0" mb="0" cb="0"/><line nr="173" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="2" ci="0" mb="0" cb="0"/><line nr="193" mi="5" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="211" mi="13" ci="0" mb="0" cb="0"/><line nr="223" mi="4" ci="0" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="234" mi="5" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="13" ci="0" mb="0" cb="0"/><line nr="261" mi="10" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="4" ci="0" mb="0" cb="0"/><line nr="264" mi="2" ci="0" mb="0" cb="0"/><line nr="271" mi="10" ci="0" mb="0" cb="0"/><line nr="272" mi="1" ci="0" mb="0" cb="0"/><line nr="273" mi="4" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="281" mi="10" ci="0" mb="0" cb="0"/><line nr="282" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="4" ci="0" mb="0" cb="0"/><line nr="284" mi="2" ci="0" mb="0" cb="0"/><line nr="294" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SubClassOfMatcher.java"><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="14" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="13" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="13" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="13" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="10" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="10" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceSpecificationLinkMatch.java"><line nr="31" mi="9" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="2" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="2" cb="0"/><line nr="50" mi="4" ci="0" mb="2" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="8" ci="0" mb="0" cb="0"/><line nr="79" mi="9" ci="0" mb="2" cb="0"/><line nr="84" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="13" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="8" ci="0" mb="4" cb="0"/><line nr="116" mi="8" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="1" ci="0" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="168" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="179" mi="1" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="209" covered="0"/><counter type="BRANCH" missed="28" covered="0"/><counter type="LINE" missed="53" covered="0"/><counter type="COMPLEXITY" missed="35" covered="0"/><counter type="METHOD" missed="21" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="InstanceOfInstanceSpecificationLinkMatcher.java"><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="13" ci="0" mb="0" cb="0"/><line nr="112" mi="14" ci="0" mb="0" cb="0"/><line nr="124" mi="13" ci="0" mb="0" cb="0"/><line nr="135" mi="13" ci="0" mb="0" cb="0"/><line nr="146" mi="13" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="159" mi="14" ci="0" mb="0" cb="0"/><line nr="172" mi="4" ci="0" mb="0" cb="0"/><line nr="181" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="183" mi="2" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="13" ci="0" mb="0" cb="0"/><line nr="222" mi="4" ci="0" mb="0" cb="0"/><line nr="223" mi="5" ci="0" mb="0" cb="0"/><line nr="224" mi="2" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="242" mi="5" ci="0" mb="0" cb="0"/><line nr="251" mi="13" ci="0" mb="0" cb="0"/><line nr="260" mi="10" ci="0" mb="0" cb="0"/><line nr="261" mi="1" ci="0" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="2" ci="0" mb="0" cb="0"/><line nr="270" mi="10" ci="0" mb="0" cb="0"/><line nr="271" mi="1" ci="0" mb="0" cb="0"/><line nr="272" mi="4" ci="0" mb="0" cb="0"/><line nr="273" mi="2" ci="0" mb="0" cb="0"/><line nr="280" mi="10" ci="0" mb="0" cb="0"/><line nr="281" mi="1" ci="0" mb="0" cb="0"/><line nr="282" mi="4" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="293" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GetReferenceToTypeMatcher.java"><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="13" ci="0" mb="0" cb="0"/><line nr="114" mi="14" ci="0" mb="0" cb="0"/><line nr="126" mi="13" ci="0" mb="0" cb="0"/><line nr="137" mi="13" ci="0" mb="0" cb="0"/><line nr="148" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="161" mi="14" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="183" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="185" mi="2" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="212" mi="13" ci="0" mb="0" cb="0"/><line nr="224" mi="4" ci="0" mb="0" cb="0"/><line nr="225" mi="5" ci="0" mb="0" cb="0"/><line nr="226" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="253" mi="13" ci="0" mb="0" cb="0"/><line nr="262" mi="10" ci="0" mb="0" cb="0"/><line nr="263" mi="1" ci="0" mb="0" cb="0"/><line nr="264" mi="4" ci="0" mb="0" cb="0"/><line nr="265" mi="2" ci="0" mb="0" cb="0"/><line nr="272" mi="10" ci="0" mb="0" cb="0"/><line nr="273" mi="1" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="2" ci="0" mb="0" cb="0"/><line nr="282" mi="10" ci="0" mb="0" cb="0"/><line nr="283" mi="1" ci="0" mb="0" cb="0"/><line nr="284" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PropertiesWithTypeMatcher.java"><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="14" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="13" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="13" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="13" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="10" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="10" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Model_adapter.java"><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="91" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="GetReferenceToTypeMatch.java"><line nr="33" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="4" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="8" ci="0" mb="4" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GetManifestationsMatch.java"><line nr="37" mi="17" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="2" cb="0"/><line nr="48" mi="7" ci="0" mb="2" cb="0"/><line nr="49" mi="7" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="2" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="4" ci="0" mb="2" cb="0"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="7" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="91" mi="1" ci="0" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="18" ci="0" mb="0" cb="0"/><line nr="115" mi="13" ci="0" mb="2" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="121" mi="15" ci="0" mb="0" cb="0"/><line nr="123" mi="15" ci="0" mb="0" cb="0"/><line nr="125" mi="13" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="2" ci="0" mb="0" cb="0"/><line nr="134" mi="13" ci="0" mb="2" cb="0"/><line nr="135" mi="13" ci="0" mb="2" cb="0"/><line nr="136" mi="13" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="2" cb="0"/><line nr="143" mi="2" ci="0" mb="0" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="2" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="2" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="6" ci="0" mb="2" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="6" ci="0" mb="0" cb="0"/><line nr="156" mi="3" ci="0" mb="0" cb="0"/><line nr="157" mi="8" ci="0" mb="4" cb="0"/><line nr="158" mi="8" ci="0" mb="2" cb="0"/><line nr="159" mi="8" ci="0" mb="4" cb="0"/><line nr="160" mi="8" ci="0" mb="2" cb="0"/><line nr="161" mi="8" ci="0" mb="4" cb="0"/><line nr="162" mi="8" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="2" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="198" mi="7" ci="0" mb="0" cb="0"/><line nr="212" mi="7" ci="0" mb="0" cb="0"/><line nr="217" mi="6" ci="0" mb="0" cb="0"/><line nr="218" mi="1" ci="0" mb="0" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="228" mi="6" ci="0" mb="0" cb="0"/><line nr="229" mi="1" ci="0" mb="0" cb="0"/><line nr="233" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="397" covered="0"/><counter type="BRANCH" missed="56" covered="0"/><counter type="LINE" missed="79" covered="0"/><counter type="COMPLEXITY" missed="53" covered="0"/><counter type="METHOD" missed="25" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="ParametersWithTypeMatcher.java"><line nr="60" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="14" ci="0" mb="0" cb="0"/><line nr="127" mi="13" ci="0" mb="0" cb="0"/><line nr="138" mi="13" ci="0" mb="0" cb="0"/><line nr="149" mi="13" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="162" mi="14" ci="0" mb="0" cb="0"/><line nr="175" mi="4" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="195" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="5" ci="0" mb="0" cb="0"/><line nr="213" mi="13" ci="0" mb="0" cb="0"/><line nr="225" mi="4" ci="0" mb="0" cb="0"/><line nr="226" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="236" mi="5" ci="0" mb="0" cb="0"/><line nr="245" mi="5" ci="0" mb="0" cb="0"/><line nr="254" mi="13" ci="0" mb="0" cb="0"/><line nr="263" mi="10" ci="0" mb="0" cb="0"/><line nr="264" mi="1" ci="0" mb="0" cb="0"/><line nr="265" mi="4" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="10" ci="0" mb="0" cb="0"/><line nr="274" mi="1" ci="0" mb="0" cb="0"/><line nr="275" mi="4" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="283" mi="10" ci="0" mb="0" cb="0"/><line nr="284" mi="1" ci="0" mb="0" cb="0"/><line nr="285" mi="4" ci="0" mb="0" cb="0"/><line nr="286" mi="2" ci="0" mb="0" cb="0"/><line nr="296" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="232" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="41" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceOfInstanceSpecificationLinkMatch.java"><line nr="33" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="4" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="8" ci="0" mb="4" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="SubClassOfMatch.java"><line nr="33" mi="13" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="7" ci="0" mb="2" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="2" cb="0"/><line nr="58" mi="4" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="1" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="13" ci="0" mb="0" cb="0"/><line nr="96" mi="11" ci="0" mb="2" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="104" mi="13" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="2" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="6" ci="0" mb="0" cb="0"/><line nr="134" mi="3" ci="0" mb="0" cb="0"/><line nr="135" mi="8" ci="0" mb="4" cb="0"/><line nr="136" mi="8" ci="0" mb="2" cb="0"/><line nr="137" mi="8" ci="0" mb="4" cb="0"/><line nr="138" mi="8" ci="0" mb="2" cb="0"/><line nr="139" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="148" mi="5" ci="0" mb="0" cb="0"/><line nr="160" mi="6" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="0" cb="0"/><line nr="186" mi="6" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="0" cb="0"/><line nr="203" mi="1" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="GetManifestationsMatcher.java"><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="2" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="103" mi="17" ci="0" mb="0" cb="0"/><line nr="116" mi="18" ci="0" mb="0" cb="0"/><line nr="129" mi="17" ci="0" mb="0" cb="0"/><line nr="141" mi="17" ci="0" mb="0" cb="0"/><line nr="153" mi="17" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="18" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="192" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="219" mi="17" ci="0" mb="0" cb="0"/><line nr="232" mi="4" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="234" mi="2" ci="0" mb="0" cb="0"/><line nr="243" mi="5" ci="0" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="17" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="276" mi="2" ci="0" mb="0" cb="0"/><line nr="285" mi="5" ci="0" mb="0" cb="0"/><line nr="294" mi="5" ci="0" mb="0" cb="0"/><line nr="303" mi="17" ci="0" mb="0" cb="0"/><line nr="313" mi="14" ci="0" mb="0" cb="0"/><line nr="314" mi="1" ci="0" mb="0" cb="0"/><line nr="315" mi="4" ci="0" mb="0" cb="0"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="14" ci="0" mb="0" cb="0"/><line nr="324" mi="1" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="326" mi="2" ci="0" mb="0" cb="0"/><line nr="333" mi="14" ci="0" mb="0" cb="0"/><line nr="334" mi="1" ci="0" mb="0" cb="0"/><line nr="335" mi="4" ci="0" mb="0" cb="0"/><line nr="336" mi="2" ci="0" mb="0" cb="0"/><line nr="346" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="315" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="47" covered="0"/><counter type="COMPLEXITY" missed="28" covered="0"/><counter type="METHOD" missed="27" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InstanceSpecificationLinkMatcher.java"><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="9" ci="0" mb="0" cb="0"/><line nr="106" mi="10" ci="0" mb="0" cb="0"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="9" ci="0" mb="0" cb="0"/><line nr="137" mi="9" ci="0" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="10" ci="0" mb="0" cb="0"/><line nr="161" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="4" ci="0" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="5" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="188" mi="1" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="2" ci="0" mb="0" cb="0"/><line nr="197" mi="6" ci="0" mb="0" cb="0"/><line nr="198" mi="1" ci="0" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="207" mi="6" ci="0" mb="0" cb="0"/><line nr="208" mi="1" ci="0" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="143" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="17" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ParametersWithTypeMatch.java"><line nr="34" mi="13" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="7" ci="0" mb="2" cb="0"/><line nr="44" mi="7" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="2" cb="0"/><line nr="59" mi="4" ci="0" mb="2" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="2" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="13" ci="0" mb="0" cb="0"/><line nr="97" mi="11" ci="0" mb="2" cb="0"/><line nr="102" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="15" ci="0" mb="0" cb="0"/><line nr="105" mi="13" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="13" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="2" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="136" mi="8" ci="0" mb="4" cb="0"/><line nr="137" mi="8" ci="0" mb="2" cb="0"/><line nr="138" mi="8" ci="0" mb="4" cb="0"/><line nr="139" mi="8" ci="0" mb="2" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="161" mi="6" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="0" cb="0"/><line nr="187" mi="6" ci="0" mb="0" cb="0"/><line nr="192" mi="5" ci="0" mb="0" cb="0"/><line nr="193" mi="1" ci="0" mb="0" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="203" mi="5" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="303" covered="0"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="66" covered="0"/><counter type="COMPLEXITY" missed="44" covered="0"/><counter type="METHOD" missed="23" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="4365" covered="0"/><counter type="BRANCH" missed="354" covered="0"/><counter type="LINE" missed="883" covered="0"/><counter type="COMPLEXITY" missed="561" covered="0"/><counter type="METHOD" missed="384" covered="0"/><counter type="CLASS" missed="33" covered="0"/></package><counter type="INSTRUCTION" missed="10675" covered="723"/><counter type="BRANCH" missed="787" covered="65"/><counter type="LINE" missed="1962" covered="155"/><counter type="COMPLEXITY" missed="993" covered="48"/><counter type="METHOD" missed="587" covered="26"/><counter type="CLASS" missed="70" covered="5"/></report>